[{"/Users/mintway/Documents/GitHub/aedongyeon2022/src/index.js":"1","/Users/mintway/Documents/GitHub/aedongyeon2022/src/reportWebVitals.js":"2","/Users/mintway/Documents/GitHub/aedongyeon2022/src/App.jsx":"3","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/question/question.component.jsx":"4","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/home/home.component.jsx":"5","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/result/result.component.jsx":"6","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg1.component.jsx":"7","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg2.component.jsx":"8","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg3.component.jsx":"9","/Users/mintway/Documents/GitHub/aedongyeon2022/src/components/developerPage/developerPage.component.jsx":"10"},{"size":662,"mtime":1662984832121,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1662984832122,"results":"13","hashOfConfig":"12"},{"size":747,"mtime":1662984832075,"results":"14","hashOfConfig":"12"},{"size":3618,"mtime":1662984832123,"results":"15","hashOfConfig":"12"},{"size":339,"mtime":1662984832122,"results":"16","hashOfConfig":"12"},{"size":3229,"mtime":1662984832123,"results":"17","hashOfConfig":"12"},{"size":196,"mtime":1662984832123,"results":"18","hashOfConfig":"12"},{"size":203,"mtime":1662984832123,"results":"19","hashOfConfig":"12"},{"size":283,"mtime":1662984832123,"results":"20","hashOfConfig":"12"},{"size":1656,"mtime":1662984832121,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"apipub",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mintway/Documents/GitHub/aedongyeon2022/src/index.js",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/reportWebVitals.js",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/App.jsx",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/question/question.component.jsx",["54","55","56","57"],[],"import { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./question.styles.scss\";\nimport Questions from \"../../common/api/questionsApi.json\";\nimport TextTransition, { presets } from \"react-text-transition\";\n\nconst Question = () => {\n  const navigate = useNavigate();\n  const [questionNumber, setQuestionNumber] = useState(1);\n  const [cntE, setCntE] = useState(0);\n  const [cntI, setCntI] = useState(0);\n  const [cntT, setCntT] = useState(0);\n  const [cntF, setCntF] = useState(0);\n  const [cntJ, setCntJ] = useState(0);\n  const [cntP, setCntP] = useState(0);\n  useEffect(() => {\n    if (cntE + cntI + cntT + cntF + cntJ + cntP !== 0) toNext();\n    console.log(questionNumber);\n  }, [cntE, cntI, cntT, cntF, cntJ, cntP]);\n\n  console.log(`E${cntE} I${cntI} T${cntT} F${cntF} J${cntJ} P${cntP}`);\n  const handleTypes = (selectedType) => {\n    switch (Questions[questionNumber][\"option\"]) {\n      case \"EI\":\n        if (selectedType === \"E\") setCntE(cntE + 1);\n        else if (selectedType === \"I\") setCntI(cntI + 1);\n        break;\n      case \"TF\":\n        if (selectedType === \"T\") setCntT(cntT + 1);\n        else if (selectedType === \"F\") setCntF(cntF + 1);\n        break;\n      case \"JP\":\n        if (selectedType === \"J\") setCntJ(cntJ + 1);\n        else if (selectedType === \"P\") setCntP(cntP + 1);\n        break;\n      default:\n        console.log(Questions[questionNumber][\"option\"]);\n        console.log(\"ERROR\");\n    }\n  };\n  const toNext = () => {\n    if (questionNumber < 9) setQuestionNumber(questionNumber + 1);\n    else {\n      const eOri = cntE > cntI ? \"E\" : \"I\";\n      const tOrf = cntT > cntF ? \"T\" : \"F\";\n      const jOrp = cntJ > cntP ? \"J\" : \"P\";\n      if (eOri === \"E\" && tOrf === \"F\" && jOrp === \"J\") navigate(`/3/wendy`);\n      if (eOri === \"I\" && tOrf === \"T\" && jOrp === \"P\") navigate(`/3/wendy`);\n      if (eOri === \"E\" && tOrf === \"F\" && jOrp === \"P\") navigate(`/3/peterpan`);\n      if (eOri === \"I\" && tOrf === \"F\" && jOrp === \"P\") navigate(`/3/peterpan`);\n      if (eOri === \"I\" && tOrf === \"F\" && jOrp === \"J\")\n        navigate(`/3/tinkerbell`);\n      if (eOri === \"I\" && tOrf === \"T\" && jOrp === \"J\")\n        navigate(`/3/tinkerbell`);\n      if (eOri === \"E\" && tOrf === \"T\" && jOrp === \"J\") navigate(`/3/hook`);\n      if (eOri === \"E\" && tOrf === \"T\" && jOrp === \"P\") navigate(`/3/hook`);\n    }\n  };\n  const handleOnClick0 = () => {\n    console.log(questionNumber);\n    const selectedType = Questions[questionNumber][\"answers\"][0][\"type\"];\n    console.log(selectedType);\n    handleTypes(selectedType);\n  };\n  const handleOnClick1 = () => {\n    console.log(questionNumber);\n    const selectedType = Questions[questionNumber][\"answers\"][1][\"type\"];\n    console.log(selectedType);\n    handleTypes(selectedType);\n  };\n\n  console.log(Questions[0]);\n  return (\n    <div className=\"question-background\">\n      <div className=\"question-box\">\n        <div className=\"question-container\">\n          <p className=\"question-paragraph\">\n            {Questions[questionNumber][\"question\"]}\n          </p>\n          <div className=\"question-buttons-container\">\n            <div className=\"answers-container\">\n              <button className=\"button-answer\" onClick={handleOnClick0}>\n                {Questions[questionNumber][\"answers\"][0][\"content\"]}\n              </button>\n              <button className=\"button-answer\" onClick={handleOnClick1}>\n                {Questions[questionNumber][\"answers\"][1][\"content\"]}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/home/home.component.jsx",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/result/result.component.jsx",["58"],[],"import Mbtis from \"../../common/api/mbtisApi.json\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./result.styles.scss\";\nimport { useState } from \"react\";\nimport DeveloperPage from \"../../components/developerPage/developerPage.component\";\nimport copy from \"copy-to-clipboard\";\nimport img_hook from \"../../assets/character_hook.png\";\nimport img_peterpan from \"../../assets/character_peterpan.png\";\nimport img_tinkerbell from \"../../assets/character_tinkerbell.png\";\nimport img_wendy from \"../../assets/character_wendy.png\";\n\nconst Result = () => {\n  const [clicked, setClicked] = useState(false);\n  const { mbtiName } = useParams();\n  console.log(mbtiName);\n  console.log(Mbtis);\n  const mbti = Mbtis[mbtiName];\n  console.log(mbti);\n  if (!mbti) {\n    return (\n      <div>\n        <h1>This is an invalid page.</h1>\n      </div>\n    );\n  }\n  console.log(mbti[\"description\"][0]);\n\n  const handleCopyClipBoard = async (text) => {\n    try {\n      copy(text);\n\n      alert(\"클립보드에 복사되었습니다.\");\n    } catch (error) {\n      alert(\"복사 실패\");\n    }\n  };\n  console.log(mbti[\"description\"].length);\n  return (\n    <div>\n      <div className=\"result-background\">\n        {/* <DeveloperPage setClicked={setClicked} /> */}\n        {mbtiName === \"hook\" ? (\n          <img className=\"result-character\" src={img_hook} alt=\"character\" />\n        ) : null}\n        {mbtiName === \"peterpan\" ? (\n          <img\n            className=\"result-character\"\n            src={img_peterpan}\n            alt=\"character\"\n          />\n        ) : null}\n        {mbtiName === \"tinkerbell\" ? (\n          <img\n            className=\"result-character\"\n            src={img_tinkerbell}\n            alt=\"character\"\n          />\n        ) : null}\n        {mbtiName === \"wendy\" ? (\n          <img className=\"result-character\" src={img_wendy} alt=\"character\" />\n        ) : null}\n        <div className=\"result-box\">\n          <div className=\"result-container\">\n            <p className=\"result-top-text\">당신은.....</p>\n            <div className=\"result-title-container\">\n              <h1 className=\"result-title\">{mbti[\"name\"]}</h1>\n            </div>\n            <p className=\"result-subhead\">{mbti[\"subhead\"]}</p>\n            <p className=\"result-paragraph-top\">{mbti[\"description\"][0]}</p>\n            <p className=\"result-paragraph\">{mbti[\"description\"][1]}</p>\n            <p className=\"result-paragraph\">{mbti[\"description\"][2]}</p>\n            <p className=\"result-paragraph\">{mbti[\"description\"][3]}</p>\n            <p className=\"result-club-top\">당신에게 어울리는 동아리는:</p>\n            <p className=\"result-paragraph\">{mbti[\"club\"]}</p>\n            <span>\n              <Link to=\"/\">\n                <p className=\"result-button-home\">홈으로 돌아가기</p>\n              </Link>\n              <p\n                className=\"result-button-developer\"\n                onClick={() => {\n                  setClicked(true);\n                }}\n              >\n                개발자에게 관심 주기\n              </p>\n            </span>\n          </div>\n        </div>\n      </div>\n      {clicked ? <DeveloperPage setClicked={setClicked} /> : null}\n    </div>\n  );\n};\n\nexport default Result;\n","/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg1.component.jsx",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg2.component.jsx",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/routes/page/pg3.component.jsx",[],[],"/Users/mintway/Documents/GitHub/aedongyeon2022/src/components/developerPage/developerPage.component.jsx",[],[],{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":5,"column":26,"nodeType":"61","messageId":"62","endLine":5,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":19,"column":6,"nodeType":"67","endLine":19,"endColumn":42,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":28,"column":9,"nodeType":"61","messageId":"62","endLine":28,"endColumn":28},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'TextTransition' is defined but never used.","'presets' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'questionNumber' and 'toNext'. Either include them or remove the dependency array.","ArrayExpression",["70"],"'handleCopyClipBoard' is assigned a value but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [cntE, cntI, cntT, cntF, cntJ, cntP, toNext, questionNumber]",{"range":"73","text":"74"},[733,769],"[cntE, cntI, cntT, cntF, cntJ, cntP, toNext, questionNumber]"]